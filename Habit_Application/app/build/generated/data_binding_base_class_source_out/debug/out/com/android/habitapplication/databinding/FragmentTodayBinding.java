// Generated by view binder compiler. Do not edit!
package com.android.habitapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.habitapplication.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTodayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton FriBtn;

  @NonNull
  public final MaterialButton MonBtn;

  @NonNull
  public final MaterialButton SatBtn;

  @NonNull
  public final MaterialButton SunBtn;

  @NonNull
  public final MaterialButton ThuBtn;

  @NonNull
  public final MaterialButton TueBtn;

  @NonNull
  public final MaterialButton WedBtn;

  @NonNull
  public final FloatingActionButton addBtn;

  @NonNull
  public final MaterialButton backwardBtn;

  @NonNull
  public final LinearLayout dateRow;

  @NonNull
  public final MaterialButton forwardBtn;

  @NonNull
  public final RecyclerView todayRecyclerView;

  @NonNull
  public final TextView todayText;

  private FragmentTodayBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton FriBtn,
      @NonNull MaterialButton MonBtn, @NonNull MaterialButton SatBtn,
      @NonNull MaterialButton SunBtn, @NonNull MaterialButton ThuBtn,
      @NonNull MaterialButton TueBtn, @NonNull MaterialButton WedBtn,
      @NonNull FloatingActionButton addBtn, @NonNull MaterialButton backwardBtn,
      @NonNull LinearLayout dateRow, @NonNull MaterialButton forwardBtn,
      @NonNull RecyclerView todayRecyclerView, @NonNull TextView todayText) {
    this.rootView = rootView;
    this.FriBtn = FriBtn;
    this.MonBtn = MonBtn;
    this.SatBtn = SatBtn;
    this.SunBtn = SunBtn;
    this.ThuBtn = ThuBtn;
    this.TueBtn = TueBtn;
    this.WedBtn = WedBtn;
    this.addBtn = addBtn;
    this.backwardBtn = backwardBtn;
    this.dateRow = dateRow;
    this.forwardBtn = forwardBtn;
    this.todayRecyclerView = todayRecyclerView;
    this.todayText = todayText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTodayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTodayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_today, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTodayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Fri_btn;
      MaterialButton FriBtn = ViewBindings.findChildViewById(rootView, id);
      if (FriBtn == null) {
        break missingId;
      }

      id = R.id.Mon_btn;
      MaterialButton MonBtn = ViewBindings.findChildViewById(rootView, id);
      if (MonBtn == null) {
        break missingId;
      }

      id = R.id.Sat_btn;
      MaterialButton SatBtn = ViewBindings.findChildViewById(rootView, id);
      if (SatBtn == null) {
        break missingId;
      }

      id = R.id.Sun_btn;
      MaterialButton SunBtn = ViewBindings.findChildViewById(rootView, id);
      if (SunBtn == null) {
        break missingId;
      }

      id = R.id.Thu_btn;
      MaterialButton ThuBtn = ViewBindings.findChildViewById(rootView, id);
      if (ThuBtn == null) {
        break missingId;
      }

      id = R.id.Tue_btn;
      MaterialButton TueBtn = ViewBindings.findChildViewById(rootView, id);
      if (TueBtn == null) {
        break missingId;
      }

      id = R.id.Wed_btn;
      MaterialButton WedBtn = ViewBindings.findChildViewById(rootView, id);
      if (WedBtn == null) {
        break missingId;
      }

      id = R.id.add_btn;
      FloatingActionButton addBtn = ViewBindings.findChildViewById(rootView, id);
      if (addBtn == null) {
        break missingId;
      }

      id = R.id.backward_btn;
      MaterialButton backwardBtn = ViewBindings.findChildViewById(rootView, id);
      if (backwardBtn == null) {
        break missingId;
      }

      id = R.id.dateRow;
      LinearLayout dateRow = ViewBindings.findChildViewById(rootView, id);
      if (dateRow == null) {
        break missingId;
      }

      id = R.id.forward_btn;
      MaterialButton forwardBtn = ViewBindings.findChildViewById(rootView, id);
      if (forwardBtn == null) {
        break missingId;
      }

      id = R.id.todayRecyclerView;
      RecyclerView todayRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (todayRecyclerView == null) {
        break missingId;
      }

      id = R.id.todayText;
      TextView todayText = ViewBindings.findChildViewById(rootView, id);
      if (todayText == null) {
        break missingId;
      }

      return new FragmentTodayBinding((ConstraintLayout) rootView, FriBtn, MonBtn, SatBtn, SunBtn,
          ThuBtn, TueBtn, WedBtn, addBtn, backwardBtn, dateRow, forwardBtn, todayRecyclerView,
          todayText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
