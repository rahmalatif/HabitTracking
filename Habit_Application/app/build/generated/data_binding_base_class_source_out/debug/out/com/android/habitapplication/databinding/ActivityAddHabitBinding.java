// Generated by view binder compiler. Do not edit!
package com.android.habitapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.habitapplication.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddHabitBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton FriBtn;

  @NonNull
  public final MaterialButton MonBtn;

  @NonNull
  public final MaterialButton SatBtn;

  @NonNull
  public final MaterialButton SunBtn;

  @NonNull
  public final MaterialButton ThuBtn;

  @NonNull
  public final MaterialButton TueBtn;

  @NonNull
  public final MaterialButton WedBtn;

  @NonNull
  public final ImageButton addTaskBtn;

  @NonNull
  public final LinearLayout dateRow;

  @NonNull
  public final EditText habitDescriptionEditText;

  @NonNull
  public final EditText habitNameEditText;

  @NonNull
  public final Spinner iconSpinner;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView progressTextView;

  @NonNull
  public final ImageButton resetBtn;

  @NonNull
  public final Button saveHabitButton;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final EditText taskInput;

  @NonNull
  public final LinearLayout tasksContainer;

  @NonNull
  public final TextView titleText;

  private ActivityAddHabitBinding(@NonNull ScrollView rootView, @NonNull MaterialButton FriBtn,
      @NonNull MaterialButton MonBtn, @NonNull MaterialButton SatBtn,
      @NonNull MaterialButton SunBtn, @NonNull MaterialButton ThuBtn,
      @NonNull MaterialButton TueBtn, @NonNull MaterialButton WedBtn,
      @NonNull ImageButton addTaskBtn, @NonNull LinearLayout dateRow,
      @NonNull EditText habitDescriptionEditText, @NonNull EditText habitNameEditText,
      @NonNull Spinner iconSpinner, @NonNull LinearLayout main, @NonNull TextView progressTextView,
      @NonNull ImageButton resetBtn, @NonNull Button saveHabitButton,
      @NonNull ScrollView scrollView, @NonNull EditText taskInput,
      @NonNull LinearLayout tasksContainer, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.FriBtn = FriBtn;
    this.MonBtn = MonBtn;
    this.SatBtn = SatBtn;
    this.SunBtn = SunBtn;
    this.ThuBtn = ThuBtn;
    this.TueBtn = TueBtn;
    this.WedBtn = WedBtn;
    this.addTaskBtn = addTaskBtn;
    this.dateRow = dateRow;
    this.habitDescriptionEditText = habitDescriptionEditText;
    this.habitNameEditText = habitNameEditText;
    this.iconSpinner = iconSpinner;
    this.main = main;
    this.progressTextView = progressTextView;
    this.resetBtn = resetBtn;
    this.saveHabitButton = saveHabitButton;
    this.scrollView = scrollView;
    this.taskInput = taskInput;
    this.tasksContainer = tasksContainer;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Fri_btn;
      MaterialButton FriBtn = ViewBindings.findChildViewById(rootView, id);
      if (FriBtn == null) {
        break missingId;
      }

      id = R.id.Mon_btn;
      MaterialButton MonBtn = ViewBindings.findChildViewById(rootView, id);
      if (MonBtn == null) {
        break missingId;
      }

      id = R.id.Sat_btn;
      MaterialButton SatBtn = ViewBindings.findChildViewById(rootView, id);
      if (SatBtn == null) {
        break missingId;
      }

      id = R.id.Sun_btn;
      MaterialButton SunBtn = ViewBindings.findChildViewById(rootView, id);
      if (SunBtn == null) {
        break missingId;
      }

      id = R.id.Thu_btn;
      MaterialButton ThuBtn = ViewBindings.findChildViewById(rootView, id);
      if (ThuBtn == null) {
        break missingId;
      }

      id = R.id.Tue_btn;
      MaterialButton TueBtn = ViewBindings.findChildViewById(rootView, id);
      if (TueBtn == null) {
        break missingId;
      }

      id = R.id.Wed_btn;
      MaterialButton WedBtn = ViewBindings.findChildViewById(rootView, id);
      if (WedBtn == null) {
        break missingId;
      }

      id = R.id.addTaskBtn;
      ImageButton addTaskBtn = ViewBindings.findChildViewById(rootView, id);
      if (addTaskBtn == null) {
        break missingId;
      }

      id = R.id.dateRow;
      LinearLayout dateRow = ViewBindings.findChildViewById(rootView, id);
      if (dateRow == null) {
        break missingId;
      }

      id = R.id.habitDescriptionEditText;
      EditText habitDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (habitDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.habitNameEditText;
      EditText habitNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (habitNameEditText == null) {
        break missingId;
      }

      id = R.id.iconSpinner;
      Spinner iconSpinner = ViewBindings.findChildViewById(rootView, id);
      if (iconSpinner == null) {
        break missingId;
      }

      id = R.id.main;
      LinearLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.progressTextView;
      TextView progressTextView = ViewBindings.findChildViewById(rootView, id);
      if (progressTextView == null) {
        break missingId;
      }

      id = R.id.resetBtn;
      ImageButton resetBtn = ViewBindings.findChildViewById(rootView, id);
      if (resetBtn == null) {
        break missingId;
      }

      id = R.id.saveHabitButton;
      Button saveHabitButton = ViewBindings.findChildViewById(rootView, id);
      if (saveHabitButton == null) {
        break missingId;
      }

      ScrollView scrollView = (ScrollView) rootView;

      id = R.id.taskInput;
      EditText taskInput = ViewBindings.findChildViewById(rootView, id);
      if (taskInput == null) {
        break missingId;
      }

      id = R.id.tasksContainer;
      LinearLayout tasksContainer = ViewBindings.findChildViewById(rootView, id);
      if (tasksContainer == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityAddHabitBinding((ScrollView) rootView, FriBtn, MonBtn, SatBtn, SunBtn,
          ThuBtn, TueBtn, WedBtn, addTaskBtn, dateRow, habitDescriptionEditText, habitNameEditText,
          iconSpinner, main, progressTextView, resetBtn, saveHabitButton, scrollView, taskInput,
          tasksContainer, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
