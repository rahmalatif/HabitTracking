// Generated by view binder compiler. Do not edit!
package com.android.habitapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.habitapplication.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChallangeDetailesBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton backBtn;

  @NonNull
  public final ImageView headerDecoration;

  @NonNull
  public final MaterialButton startChallengeButton;

  private ActivityChallangeDetailesBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton backBtn, @NonNull ImageView headerDecoration,
      @NonNull MaterialButton startChallengeButton) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.headerDecoration = headerDecoration;
    this.startChallengeButton = startChallengeButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChallangeDetailesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChallangeDetailesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_challange_detailes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChallangeDetailesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      MaterialButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.headerDecoration;
      ImageView headerDecoration = ViewBindings.findChildViewById(rootView, id);
      if (headerDecoration == null) {
        break missingId;
      }

      id = R.id.startChallengeButton;
      MaterialButton startChallengeButton = ViewBindings.findChildViewById(rootView, id);
      if (startChallengeButton == null) {
        break missingId;
      }

      return new ActivityChallangeDetailesBinding((ScrollView) rootView, backBtn, headerDecoration,
          startChallengeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
