// Generated by view binder compiler. Do not edit!
package com.android.habitapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.habitapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HabitItemListBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView centerIcon;

  @NonNull
  public final ImageButton deleteBtn;

  @NonNull
  public final ImageButton editBtn;

  @NonNull
  public final TextView habitProgressText;

  @NonNull
  public final TextView habitTitle;

  @NonNull
  public final ImageView progressBackground;

  private HabitItemListBinding(@NonNull CardView rootView, @NonNull ImageView centerIcon,
      @NonNull ImageButton deleteBtn, @NonNull ImageButton editBtn,
      @NonNull TextView habitProgressText, @NonNull TextView habitTitle,
      @NonNull ImageView progressBackground) {
    this.rootView = rootView;
    this.centerIcon = centerIcon;
    this.deleteBtn = deleteBtn;
    this.editBtn = editBtn;
    this.habitProgressText = habitProgressText;
    this.habitTitle = habitTitle;
    this.progressBackground = progressBackground;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HabitItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HabitItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.habit_item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HabitItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.center_icon;
      ImageView centerIcon = ViewBindings.findChildViewById(rootView, id);
      if (centerIcon == null) {
        break missingId;
      }

      id = R.id.delete_btn;
      ImageButton deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.edit_btn;
      ImageButton editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.habit_progress_text;
      TextView habitProgressText = ViewBindings.findChildViewById(rootView, id);
      if (habitProgressText == null) {
        break missingId;
      }

      id = R.id.habit_title;
      TextView habitTitle = ViewBindings.findChildViewById(rootView, id);
      if (habitTitle == null) {
        break missingId;
      }

      id = R.id.progress_background;
      ImageView progressBackground = ViewBindings.findChildViewById(rootView, id);
      if (progressBackground == null) {
        break missingId;
      }

      return new HabitItemListBinding((CardView) rootView, centerIcon, deleteBtn, editBtn,
          habitProgressText, habitTitle, progressBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
