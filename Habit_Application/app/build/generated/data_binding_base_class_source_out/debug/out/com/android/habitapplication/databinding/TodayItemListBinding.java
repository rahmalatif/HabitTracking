// Generated by view binder compiler. Do not edit!
package com.android.habitapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.habitapplication.R;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TodayItemListBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageButton deleteBtn;

  @NonNull
  public final ImageButton editBtn;

  @NonNull
  public final ImageView habitIcon;

  @NonNull
  public final CircularProgressIndicator habitProgressIndicator;

  @NonNull
  public final TextView habitProgressText;

  @NonNull
  public final TextView habitTitle;

  private TodayItemListBinding(@NonNull CardView rootView, @NonNull ImageButton deleteBtn,
      @NonNull ImageButton editBtn, @NonNull ImageView habitIcon,
      @NonNull CircularProgressIndicator habitProgressIndicator,
      @NonNull TextView habitProgressText, @NonNull TextView habitTitle) {
    this.rootView = rootView;
    this.deleteBtn = deleteBtn;
    this.editBtn = editBtn;
    this.habitIcon = habitIcon;
    this.habitProgressIndicator = habitProgressIndicator;
    this.habitProgressText = habitProgressText;
    this.habitTitle = habitTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TodayItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TodayItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.today_item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TodayItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_btn;
      ImageButton deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.edit_btn;
      ImageButton editBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBtn == null) {
        break missingId;
      }

      id = R.id.habit_Icon;
      ImageView habitIcon = ViewBindings.findChildViewById(rootView, id);
      if (habitIcon == null) {
        break missingId;
      }

      id = R.id.habit_progress_indicator;
      CircularProgressIndicator habitProgressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (habitProgressIndicator == null) {
        break missingId;
      }

      id = R.id.habit_progress_text;
      TextView habitProgressText = ViewBindings.findChildViewById(rootView, id);
      if (habitProgressText == null) {
        break missingId;
      }

      id = R.id.habit_title;
      TextView habitTitle = ViewBindings.findChildViewById(rootView, id);
      if (habitTitle == null) {
        break missingId;
      }

      return new TodayItemListBinding((CardView) rootView, deleteBtn, editBtn, habitIcon,
          habitProgressIndicator, habitProgressText, habitTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
